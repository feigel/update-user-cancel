#!/bin/bash -   
#title          :update-user-cancel.sh
#description    :Allow user to choose to update firmware or not
#author         :Jeff Feige
#date           :20221109
#version        :1.0    
#usage          :./update-user-cancel.sh
#notes          :AS-IS NO WARRANTY OF ANY KIND
#license	:MIT license (attribution required)       
#bash_version   :5.1.16(1)-release
#============================================================================

# Return values from update-check --check-only
UPTODATE=2
UPDATENEEDED=3
# Return values from zenity
ZOK=0
ZCANCEL=1
ZTIMEOUT=5

# Length of time Zenity stays on screen before timeout
DIALOGTIMEOUT=30

# Name of program to log
LOGGERNAME="update_user_cancel"
# Create easy logger command
LOGGER="logger -it $LOGGERNAME"

# Star
echo "Starting $LOGGERNAME" | $LOGGER

    # get latest ums settings
    get_rmsettings
    # See if we need to update or not
    #CURRENTFIRMWARE=$(cat /etc/os-release | grep VERSION= | egrep -o "([0-9]{1,}\.)+[0-9]{1,}");
    # Get the current firmware version for dialog
    CURRENTFIRMWARE=$(get product.version)
    # Check to see if we need to update
    UPDATECHECKRESPONSE=$(update-check --check-only)
    UPDATESTATUS=$?
    if [ $UPDATESTATUS -eq $UPTODATE ]; then
        echo "$UPDATECHECKRESPONSE" | $LOGGER
        exit 0
        else
        echo "Current Firmware: $CURRENTFIRMWARE -- $UPDATECHECKRESPONSE" | $LOGGER
        DISPLAY=:0 zenity --question --text "Update needed $UPDATECHECKRESPONSE\nUpdate NOW?" --width=175 --height=100 --timeout=$DIALOGTIMEOUT --ok-label="Update" --cancel-label="Cancel"
        DIALOGRESPONSE=$?
        if [ $DIALOGRESPONSE -eq $ZOK ]; then
            echo "Updating firmware per user request" | $LOGGER
            update
        elif [ $DIALOGRESPONSE -eq $ZTIMEOUT ]; then 
            echo "Update dialog timed out. Firmware not updated" | $LOGGER
        elif [ $DIALOGRESPONSE -eq $ZCANCEL ]; then
            echo "User cancelled. Firmware not update" | $LOGGER
        fi
    fi

# profit